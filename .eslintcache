[{"/Users/Trina/Desktop/clonenetflix/src/index.js":"1","/Users/Trina/Desktop/clonenetflix/src/app.js":"2","/Users/Trina/Desktop/clonenetflix/src/pages/home.js":"3","/Users/Trina/Desktop/clonenetflix/src/components/jumbotron/index.js":"4","/Users/Trina/Desktop/clonenetflix/src/components/jumbotron/styles/jumbotron.js":"5","/Users/Trina/Desktop/clonenetflix/src/containers/jumbotron.js":"6","/Users/Trina/Desktop/clonenetflix/src/components/index.js":"7","/Users/Trina/Desktop/clonenetflix/src/global-styles.js":"8","/Users/Trina/Desktop/clonenetflix/src/containers/footer.js":"9","/Users/Trina/Desktop/clonenetflix/src/components/footer/index.js":"10","/Users/Trina/Desktop/clonenetflix/src/components/footer/styles/footer.js":"11","/Users/Trina/Desktop/clonenetflix/src/containers/faqs.js":"12","/Users/Trina/Desktop/clonenetflix/src/components/accordion/index.js":"13","/Users/Trina/Desktop/clonenetflix/src/components/accordion/styles/accordion.js":"14","/Users/Trina/Desktop/clonenetflix/src/components/opt-form/index.js":"15","/Users/Trina/Desktop/clonenetflix/src/components/opt-form/styles/opt-form.js":"16","/Users/Trina/Desktop/clonenetflix/src/constants/routes.js":"17","/Users/Trina/Desktop/clonenetflix/src/containers/header.js":"18","/Users/Trina/Desktop/clonenetflix/src/components/feature/index.js":"19","/Users/Trina/Desktop/clonenetflix/src/components/header/index.js":"20","/Users/Trina/Desktop/clonenetflix/src/components/feature/styles/feature.js":"21","/Users/Trina/Desktop/clonenetflix/src/components/header/styles/header.js":"22","/Users/Trina/Desktop/clonenetflix/src/context/firebase.js":"23","/Users/Trina/Desktop/clonenetflix/src/components/form/index.js":"24","/Users/Trina/Desktop/clonenetflix/src/components/form/styles/form.js":"25","/Users/Trina/Desktop/clonenetflix/src/pages/index.js":"26","/Users/Trina/Desktop/clonenetflix/src/pages/signin.js":"27","/Users/Trina/Desktop/clonenetflix/src/pages/browse.js":"28","/Users/Trina/Desktop/clonenetflix/src/pages/signup.js":"29","/Users/Trina/Desktop/clonenetflix/src/containers/browse.js":"30","/Users/Trina/Desktop/clonenetflix/src/containers/profiles.js":"31","/Users/Trina/Desktop/clonenetflix/src/components/profiles/index.js":"32","/Users/Trina/Desktop/clonenetflix/src/components/profiles/styles/profiles.js":"33","/Users/Trina/Desktop/clonenetflix/src/components/loading/index.js":"34","/Users/Trina/Desktop/clonenetflix/src/components/loading/styles/loading.js":"35","/Users/Trina/Desktop/clonenetflix/src/hooks/index.js":"36","/Users/Trina/Desktop/clonenetflix/src/hooks/use-content.js":"37","/Users/Trina/Desktop/clonenetflix/src/utils/index.js":"38","/Users/Trina/Desktop/clonenetflix/src/utils/selection-map.js":"39","/Users/Trina/Desktop/clonenetflix/src/components/card/index.js":"40","/Users/Trina/Desktop/clonenetflix/src/components/card/styles/card.js":"41","/Users/Trina/Desktop/clonenetflix/src/components/player/index.js":"42","/Users/Trina/Desktop/clonenetflix/src/components/player/styles/player.js":"43","/Users/Trina/Desktop/clonenetflix/src/hooks/use-auth-listener.js":"44","/Users/Trina/Desktop/clonenetflix/src/helpers/routes.js":"45"},{"size":1380,"mtime":1612810409606,"results":"46","hashOfConfig":"47"},{"size":1056,"mtime":1612852598000,"results":"48","hashOfConfig":"47"},{"size":1182,"mtime":1612852112000,"results":"49","hashOfConfig":"47"},{"size":967,"mtime":1612852112000,"results":"50","hashOfConfig":"47"},{"size":1285,"mtime":1612852112000,"results":"51","hashOfConfig":"47"},{"size":771,"mtime":1612852112000,"results":"52","hashOfConfig":"47"},{"size":520,"mtime":1612852112000,"results":"53","hashOfConfig":"47"},{"size":389,"mtime":1612852112000,"results":"54","hashOfConfig":"47"},{"size":1881,"mtime":1612852112000,"results":"55","hashOfConfig":"47"},{"size":928,"mtime":1612852112000,"results":"56","hashOfConfig":"47"},{"size":1027,"mtime":1612852112000,"results":"57","hashOfConfig":"47"},{"size":997,"mtime":1612852112000,"results":"58","hashOfConfig":"47"},{"size":1626,"mtime":1612852112000,"results":"59","hashOfConfig":"47"},{"size":1731,"mtime":1612852112000,"results":"60","hashOfConfig":"47"},{"size":764,"mtime":1612852112000,"results":"61","hashOfConfig":"47"},{"size":1358,"mtime":1612852112000,"results":"62","hashOfConfig":"47"},{"size":125,"mtime":1612852112000,"results":"63","hashOfConfig":"47"},{"size":470,"mtime":1612852112000,"results":"64","hashOfConfig":"47"},{"size":472,"mtime":1612852112000,"results":"65","hashOfConfig":"47"},{"size":2819,"mtime":1612852112000,"results":"66","hashOfConfig":"47"},{"size":610,"mtime":1612852112000,"results":"67","hashOfConfig":"47"},{"size":4569,"mtime":1612852112000,"results":"68","hashOfConfig":"47"},{"size":92,"mtime":1612852112000,"results":"69","hashOfConfig":"47"},{"size":1245,"mtime":1612852112000,"results":"70","hashOfConfig":"47"},{"size":1763,"mtime":1612852112000,"results":"71","hashOfConfig":"47"},{"size":179,"mtime":1612852112000,"results":"72","hashOfConfig":"47"},{"size":2516,"mtime":1612852112000,"results":"73","hashOfConfig":"47"},{"size":393,"mtime":1612852112000,"results":"74","hashOfConfig":"47"},{"size":3206,"mtime":1612852112000,"results":"75","hashOfConfig":"47"},{"size":5303,"mtime":1612852112000,"results":"76","hashOfConfig":"47"},{"size":1138,"mtime":1612852112000,"results":"77","hashOfConfig":"47"},{"size":909,"mtime":1612852112000,"results":"78","hashOfConfig":"47"},{"size":1157,"mtime":1612852112000,"results":"79","hashOfConfig":"47"},{"size":399,"mtime":1612852112000,"results":"80","hashOfConfig":"47"},{"size":1730,"mtime":1612852112000,"results":"81","hashOfConfig":"47"},{"size":120,"mtime":1612852112000,"results":"82","hashOfConfig":"47"},{"size":871,"mtime":1612823510207,"results":"83","hashOfConfig":"47"},{"size":58,"mtime":1612852112000,"results":"84","hashOfConfig":"47"},{"size":1006,"mtime":1612852112000,"results":"85","hashOfConfig":"47"},{"size":3085,"mtime":1612839596000,"results":"86","hashOfConfig":"47"},{"size":3946,"mtime":1612815241164,"results":"87","hashOfConfig":"47"},{"size":1304,"mtime":1612852112000,"results":"88","hashOfConfig":"47"},{"size":1496,"mtime":1612852112000,"results":"89","hashOfConfig":"47"},{"size":749,"mtime":1612852112000,"results":"90","hashOfConfig":"47"},{"size":1371,"mtime":1612852598000,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"w475ly",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/Trina/Desktop/clonenetflix/src/index.js",[],["187","188"],"/Users/Trina/Desktop/clonenetflix/src/app.js",["189"],"import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { Home, Browse, Signin, Signup } from './pages';\nimport { useAuthListener } from './hooks';\nimport { IsUserRedirect, ProtectedRoute } from './helpers/routes';\n\nexport function App() {\n  const { user } = useAuthListener();\n  \n  return (\n    <Router>\n        <Switch>\n            <IsUserRedirect user={user} loggedInPath={ROUTES.BROWSE} path={ROUTES.SIGN_IN}>\n                <Signin />\n            </IsUserRedirect>\n            <IsUserRedirect user={user} loggedInPath={ROUTES.BROWSE} path={ROUTES.SIGN_UP}>\n                <Signup />\n            </IsUserRedirect>\n            <ProtectedRoute user={user} path={ROUTES.BROWSE}>\n                <Browse />\n            </ProtectedRoute>\n            <IsUserRedirect user={user} loggedInPath={ROUTES.BROWSE} path={ROUTES.HOME}>\n                <Home />\n            </IsUserRedirect>\n        </Switch>\n    </Router>\n  );\n}\n","/Users/Trina/Desktop/clonenetflix/src/pages/home.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/jumbotron/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/jumbotron/styles/jumbotron.js",[],"/Users/Trina/Desktop/clonenetflix/src/containers/jumbotron.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/global-styles.js",[],"/Users/Trina/Desktop/clonenetflix/src/containers/footer.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/footer/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/footer/styles/footer.js",[],"/Users/Trina/Desktop/clonenetflix/src/containers/faqs.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/accordion/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/accordion/styles/accordion.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/opt-form/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/opt-form/styles/opt-form.js",[],"/Users/Trina/Desktop/clonenetflix/src/constants/routes.js",[],"/Users/Trina/Desktop/clonenetflix/src/containers/header.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/feature/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/header/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/feature/styles/feature.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/header/styles/header.js",[],"/Users/Trina/Desktop/clonenetflix/src/context/firebase.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/form/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/form/styles/form.js",[],"/Users/Trina/Desktop/clonenetflix/src/pages/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/pages/signin.js",[],"/Users/Trina/Desktop/clonenetflix/src/pages/browse.js",[],"/Users/Trina/Desktop/clonenetflix/src/pages/signup.js",[],"/Users/Trina/Desktop/clonenetflix/src/containers/browse.js",["190","191"],"import React, { useState, useEffect, useContext } from 'react';\nimport Fuse from 'fuse.js';\nimport { Card, Loading, Header, Player } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport { FirebaseContext } from '../context/firebase';\nimport { SelectProfileContainer } from './profiles';\nimport { FooterContainer } from './footer';\n\nexport function BrowseContainer({ slides }) {\n    const [category, setCategory] = useState('series');\n    const [profile, setProfile] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [slideRows, setSlideRows] = useState([]);\n    \n    const { firebase } = useContext(FirebaseContext);\n    \n    const user = {\n        displayName: \"Karl\",\n        photoURL: \"1\"\n    };\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 3000);\n    }, [user])\n    \n    useEffect(() => {\n        setSlideRows(slides[category]);\n    }, [slides, category]);\n    \n    useEffect(() => {\n      const fuse = new Fuse(slideRows, { keys: ['data.description', 'data.title', 'data.genre'] });\n      const results = fuse.search(searchTerm).map(({ item }) => item);\n      \n      if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n          setSlideRows(results);\n      } else {\n          setSlideRows(slides[category]);\n      }\n    }, [searchTerm])\n    \n    return profile.displayName ? (\n        <>\n        {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n        \n            <Header src=\"joker1\" dontShowOnSmallViewPort>\n                <Header.Frame>\n                    <Header.Group>\n                        <Header.Logo to={ROUTES.HOME} src=\"/images/misc/logo.svg\" alt=\"Netflix\" />\n                        <Header.Link \n                            active={category === 'series' ? 'true' : 'false'}\n                            onClick={() => setCategory('series')}>\n                            Series\n                        </Header.Link>\n                        <Header.Link \n                            active={category === 'films' ? 'true' : 'false'}\n                            onClick={() => setCategory('films')}>\n                            Films\n                        </Header.Link>\n                    </Header.Group>\n                    <Header.Group>\n                        <Header.Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n                        <Header.Profile>\n                            <Header.Picture src={user.photoURL} />\n                            <Header.Dropdown>\n                                <Header.Group>\n                                    <Header.Picture src={user.photoURL} />\n                                    <Header.Link>{user.displayName}</Header.Link>\n                                </Header.Group>\n                                <Header.Group>\n                                    <Header.Link onClick={() => firebase.auth().signOut()}>\n                                        Sign out</Header.Link>\n                                </Header.Group>\n                            </Header.Dropdown>\n                        </Header.Profile>\n                    </Header.Group>\n                </Header.Frame>\n                \n                <Header.Feature>\n                    <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n                    <Header.Text>\n                    Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham\n                    City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a\n                    futile attempt to feel like he's part of the world around him.\n                    </Header.Text>\n                    <Header.PlayButton>Play</Header.PlayButton>\n                </Header.Feature>\n            </Header>\n            \n            <Card.Group>\n                {slideRows.map((slideItem) => (\n                    <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n                        <Card.Title>{slideItem.title}</Card.Title>\n                        <Card.Entities>\n                            {slideItem.data.map((item) => (\n                                <Card.Item key={item.docId} item={item}>\n                                    <Card.Image src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`} />\n                                    <Card.Meta>\n                                        <Card.SubTitle>{item.title}</Card.SubTitle>\n                                        <Card.Text>{item.description}</Card.Text>\n                                    </Card.Meta>\n                                </Card.Item>\n                            ))}\n                        </Card.Entities>\n                        <Card.Feature category={category}>\n                            <Player>\n                                <Player.Button />\n                                <Player.Video />\n                            </Player>\n                        </Card.Feature>\n                    </Card>\n                ))}\n            </Card.Group>\n            <FooterContainer />\n        </>)\n        : (<SelectProfileContainer user={user} setProfile={setProfile} />);\n}","/Users/Trina/Desktop/clonenetflix/src/containers/profiles.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/profiles/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/profiles/styles/profiles.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/loading/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/loading/styles/loading.js",[],"/Users/Trina/Desktop/clonenetflix/src/hooks/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/hooks/use-content.js",["192"],"import { useEffect, useState, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useContent(target) {\n    const [content, setContent] = useState([]);\n    const { firebase } = useContext(FirebaseContext);\n    \n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection(target)\n            .get()\n            .then((snapshot) => {\n                const allContent = snapshot.docs.map((contentObj) => ({\n                    ...contentObj.data(),\n                    docId: contentObj.id,\n                }));\n                \n                setContent(allContent);\n            })\n            .catch((error) => {\n                console.log(error.message);\n            });\n    }, [])\n    \n    return { [target]: content };\n}","/Users/Trina/Desktop/clonenetflix/src/utils/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/utils/selection-map.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/card/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/card/styles/card.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/player/index.js",[],"/Users/Trina/Desktop/clonenetflix/src/components/player/styles/player.js",[],"/Users/Trina/Desktop/clonenetflix/src/hooks/use-auth-listener.js",["193"],"import { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n    const { firebase } = useContext(FirebaseContext);\n    \n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser));\n                setUser(authUser);\n            } else {\n                localStorage.removeItem('authUser');\n                setUser(null);\n            }\n        });\n        \n        return () => listener();\n    }, []);\n    \n    return { user };\n}","/Users/Trina/Desktop/clonenetflix/src/helpers/routes.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":18,"column":11,"nodeType":"204","endLine":21,"endColumn":6},{"ruleId":"202","severity":1,"message":"205","line":42,"column":8,"nodeType":"206","endLine":42,"endColumn":20,"suggestions":"207"},{"ruleId":"202","severity":1,"message":"208","line":24,"column":8,"nodeType":"206","endLine":24,"endColumn":10,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"210","line":20,"column":8,"nodeType":"206","endLine":20,"endColumn":10,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'user' object makes the dependencies of useEffect Hook (at line 27) change on every render. To fix this, wrap the initialization of 'user' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has missing dependencies: 'category', 'slideRows', and 'slides'. Either include them or remove the dependency array. If 'setSlideRows' needs the current value of 'slides', you can also switch to useReducer instead of useState and read 'slides' in the reducer.","ArrayExpression",["214"],"React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [category, searchTerm, slideRows, slides]",{"range":"223","text":"224"},"Update the dependencies array to be: [firebase, target]",{"range":"225","text":"226"},"Update the dependencies array to be: [firebase]",{"range":"227","text":"228"},[1405,1417],"[category, searchTerm, slideRows, slides]",[762,764],"[firebase, target]",[717,719],"[firebase]"]